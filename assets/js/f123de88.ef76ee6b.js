"use strict";(self.webpackChunkreact_navigation_website_next=self.webpackChunkreact_navigation_website_next||[]).push([["68431"],{90966:function(e,t,i){i.r(t),i.d(t,{metadata:()=>n,contentTitle:()=>r,default:()=>h,assets:()=>c,toc:()=>l,frontMatter:()=>s});var n=JSON.parse('{"id":"navigation-key","title":"Using the navigation key","description":"The key parameter comes up repeatedly across different navigation functions. Let\'s take a look at a summary of its use cases:","source":"@site/versioned_docs/version-3.x/navigation-key.md","sourceDirName":".","slug":"/navigation-key","permalink":"/docs/3.x/navigation-key","draft":false,"unlisted":false,"editUrl":"https://github.com/react-navigation/react-navigation.github.io/edit/main/versioned_docs/version-3.x/navigation-key.md","tags":[],"version":"3.x","frontMatter":{"id":"navigation-key","title":"Using the navigation key","sidebar_label":"Using the navigation key"},"sidebar":"version-3.x-docs","previous":{"title":"Navigating without the navigation prop","permalink":"/docs/3.x/navigating-without-navigation-prop"},"next":{"title":"Deep linking","permalink":"/docs/3.x/deep-linking"}}'),a=i("85893"),o=i("50065");let s={id:"navigation-key",title:"Using the navigation key",sidebar_label:"Using the navigation key"},r=void 0,c={},l=[{value:"Usage with the <code>navigate</code> call",id:"usage-with-the-navigate-call",level:3},{value:"Usage with <code>reset</code>",id:"usage-with-reset",level:3},{value:"Usage with <code>replace</code>",id:"usage-with-replace",level:3},{value:"Usage with <code>goBack</code>",id:"usage-with-goback",level:3}];function d(e){let t={a:"a",blockquote:"blockquote",code:"code",h3:"h3",li:"li",p:"p",ul:"ul",...(0,o.a)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsxs)(t.p,{children:["The ",(0,a.jsx)(t.code,{children:"key"})," parameter comes up repeatedly across different navigation functions. Let's take a look at a summary of its use cases:"]}),"\n",(0,a.jsxs)(t.h3,{id:"usage-with-the-navigate-call",children:["Usage with the ",(0,a.jsx)(t.a,{href:"/docs/3.x/navigation-actions#navigate",children:(0,a.jsx)(t.code,{children:"navigate"})})," call"]}),"\n",(0,a.jsxs)(t.p,{children:["If no key is provided, ",(0,a.jsx)(t.code,{children:"StackRouter"})," will behave as follows:"]}),"\n",(0,a.jsxs)(t.ul,{children:["\n",(0,a.jsxs)(t.li,{children:["if a route with the given name already exists in the state, ",(0,a.jsx)(t.code,{children:"StackRouter"})," will jump to the existing route, along with setting the new parameters."]}),"\n",(0,a.jsxs)(t.li,{children:["if no such route exists, ",(0,a.jsx)(t.code,{children:"StackRouter"})," will push it onto the stack"]}),"\n"]}),"\n",(0,a.jsxs)(t.p,{children:["If, however, you want to push several instances of the same route, you can do so by providing a unique ",(0,a.jsx)(t.code,{children:"key"})," parameter each time you call ",(0,a.jsx)(t.code,{children:"navigate"}),", or you can use the ",(0,a.jsx)(t.code,{children:"push"})," action available on ",(0,a.jsx)(t.code,{children:"StackRouter"}),". See the related ",(0,a.jsx)(t.a,{href:"https://github.com/react-navigation/rfcs/blob/master/text/0004-less-pushy-navigate.md",children:"RFC"})," for more background."]}),"\n",(0,a.jsxs)(t.blockquote,{children:["\n",(0,a.jsxs)(t.p,{children:["Note: the behavior of ",(0,a.jsx)(t.code,{children:"navigate"})," without a ",(0,a.jsx)(t.code,{children:"key"})," is significantly different in the 1.x series of releases. Read more about it ",(0,a.jsx)(t.a,{href:"https://gist.github.com/vonovak/ef72f5efe1d36742de8968ff6a708985",children:"here"}),"."]}),"\n"]}),"\n",(0,a.jsxs)(t.h3,{id:"usage-with-reset",children:["Usage with ",(0,a.jsx)(t.a,{href:"/docs/3.x/stack-actions#reset",children:(0,a.jsx)(t.code,{children:"reset"})})]}),"\n",(0,a.jsxs)(t.p,{children:["When resetting, ",(0,a.jsx)(t.code,{children:"key"})," is also optional and can be a string or ",(0,a.jsx)(t.code,{children:"null"}),". If set, the navigator with the given key will reset. If ",(0,a.jsx)(t.code,{children:"null"}),", the root navigator will reset. You can obtain a route's navigator key by calling ",(0,a.jsx)(t.code,{children:"this.props.navigation.dangerouslyGetParent().state.key"}),". Reason why the function is called ",(0,a.jsx)(t.code,{children:"dangerouslyGetParent"})," is to warn developers against overusing it to eg. get parent of parent and other hard-to-follow patterns."]}),"\n",(0,a.jsxs)(t.h3,{id:"usage-with-replace",children:["Usage with ",(0,a.jsx)(t.a,{href:"/docs/3.x/stack-actions#replace",children:(0,a.jsx)(t.code,{children:"replace"})})]}),"\n",(0,a.jsxs)(t.p,{children:["With the ",(0,a.jsx)(t.code,{children:"replace"})," navigation action, ",(0,a.jsx)(t.code,{children:"key"})," is a required parameter used for identifying the route to be replaced. If you use the helper function ",(0,a.jsx)(t.code,{children:"this.props.navigation.replace"}),", we will automatically substitute the key of the current route."]}),"\n",(0,a.jsxs)(t.h3,{id:"usage-with-goback",children:["Usage with ",(0,a.jsx)(t.code,{children:"goBack"})]}),"\n",(0,a.jsxs)(t.p,{children:["Please refer to the ",(0,a.jsx)(t.a,{href:"/docs/3.x/navigation-prop#goback---close-the-active-screen-and-move-back",children:(0,a.jsx)(t.code,{children:"goBack docs"})})," for a detailed explanation."]})]})}function h(e={}){let{wrapper:t}={...(0,o.a)(),...e.components};return t?(0,a.jsx)(t,{...e,children:(0,a.jsx)(d,{...e})}):d(e)}},50065:function(e,t,i){i.d(t,{Z:function(){return r},a:function(){return s}});var n=i(67294);let a={},o=n.createContext(a);function s(e){let t=n.useContext(o);return n.useMemo(function(){return"function"==typeof e?e(t):{...t,...e}},[t,e])}function r(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:s(e.components),n.createElement(o.Provider,{value:t},e.children)}}}]);