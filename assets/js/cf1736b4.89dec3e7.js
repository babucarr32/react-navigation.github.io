"use strict";(self.webpackChunkreact_navigation_website_next=self.webpackChunkreact_navigation_website_next||[]).push([["11289"],{87242:function(e,n,t){t.r(n),t.d(n,{metadata:()=>o,contentTitle:()=>l,default:()=>d,assets:()=>u,toc:()=>m,frontMatter:()=>c});var o=JSON.parse('{"id":"use-theme","title":"useTheme","description":"The useTheme hook lets us access the currently active theme. You can use it in your own components to have them respond to changes in the theme.","source":"@site/versioned_docs/version-7.x/use-theme.md","sourceDirName":".","slug":"/use-theme","permalink":"/docs/use-theme","draft":false,"unlisted":false,"editUrl":"https://github.com/react-navigation/react-navigation.github.io/edit/main/versioned_docs/version-7.x/use-theme.md","tags":[],"version":"7.x","frontMatter":{"id":"use-theme","title":"useTheme","sidebar_label":"useTheme"},"sidebar":"docs","previous":{"title":"useScrollToTop","permalink":"/docs/use-scroll-to-top"},"next":{"title":"CommonActions","permalink":"/docs/navigation-actions"}}'),r=t("85893"),a=t("50065"),i=t("47902"),s=t("5525");let c={id:"use-theme",title:"useTheme",sidebar_label:"useTheme"},l=void 0,u={},m=[{value:"Using with class component",id:"using-with-class-component",level:2}];function h(e){let n={a:"a",code:"code",h2:"h2",p:"p",pre:"pre",...(0,a.a)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsxs)(n.p,{children:["The ",(0,r.jsx)(n.code,{children:"useTheme"})," hook lets us access the currently active theme. You can use it in your own components to have them respond to changes in the theme."]}),"\n",(0,r.jsxs)(i.Z,{groupId:"config",queryString:"config",children:[(0,r.jsx)(s.Z,{value:"static",label:"Static",default:!0,children:(0,r.jsx)(n.pre,{"data-name":"useTheme hook","data-snack":"true",children:(0,r.jsx)(n.code,{className:"language-js",metastring:'name="useTheme hook" snack',children:"import * as React from 'react';\nimport {\n  useNavigation,\n  createStaticNavigation,\n  DefaultTheme,\n  DarkTheme,\n} from '@react-navigation/native';\nimport { View, Text, TouchableOpacity, useColorScheme } from 'react-native';\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\nimport { createDrawerNavigator } from '@react-navigation/drawer';\nimport { Button } from '@react-navigation/elements';\n// codeblock-focus-start\nimport { useTheme } from '@react-navigation/native';\n\n// codeblock-focus-end\n\nfunction SettingsScreen({ route }) {\n  const navigation = useNavigation();\n  const { user } = route.params;\n  const { colors } = useTheme();\n\n  return (\n    <View style={{ flex: 1, alignItems: 'center', justifyContent: 'center' }}>\n      <Text style={{ color: colors.text }}>Settings Screen</Text>\n      <Text style={{ color: colors.text }}>\n        userParam: {JSON.stringify(user)}\n      </Text>\n      <Button onPress={() => navigation.navigate('Profile')}>\n        Go to Profile\n      </Button>\n    </View>\n  );\n}\n\nfunction ProfileScreen() {\n  const { colors } = useTheme();\n\n  return (\n    <View style={{ flex: 1, alignItems: 'center', justifyContent: 'center' }}>\n      <Text style={{ color: colors.text }}>Profile Screen</Text>\n    </View>\n  );\n}\n\n// codeblock-focus-start\nfunction MyButton() {\n  // highlight-next-line\n  const { colors } = useTheme();\n\n  return (\n    <TouchableOpacity style={{ backgroundColor: colors.card }}>\n      <Text style={{ color: colors.text }}>Button!</Text>\n    </TouchableOpacity>\n  );\n}\n// codeblock-focus-end\n\nfunction HomeScreen() {\n  const navigation = useNavigation();\n  const { colors } = useTheme();\n\n  return (\n    <View style={{ flex: 1, alignItems: 'center', justifyContent: 'center' }}>\n      <Text style={{ color: colors.text }}>Home Screen</Text>\n      <MyButton />\n      <Button\n        onPress={() =>\n          navigation.navigate('Root', {\n            screen: 'Settings',\n            params: { user: 'jane' },\n          })\n        }\n      >\n        Go to Settings\n      </Button>\n    </View>\n  );\n}\n\nconst PanelStack = createNativeStackNavigator({\n  screens: {\n    Profile: ProfileScreen,\n    Settings: SettingsScreen,\n  },\n});\n\nconst Drawer = createDrawerNavigator({\n  initialRouteName: 'Panel',\n  screens: {\n    Home: HomeScreen,\n    Panel: {\n      screen: PanelStack,\n      options: {\n        headerShown: false,\n      },\n    },\n  },\n});\n\nconst Navigation = createStaticNavigation(Drawer);\n\nexport default function App() {\n  const scheme = useColorScheme();\n  return <Navigation theme={scheme === 'dark' ? DarkTheme : DefaultTheme} />;\n}\n"})})}),(0,r.jsx)(s.Z,{value:"dynamic",label:"Dynamic",children:(0,r.jsx)(n.pre,{"data-name":"useTheme hook","data-snack":"true",children:(0,r.jsx)(n.code,{className:"language-js",metastring:'name="useTheme hook" snack',children:"import * as React from 'react';\nimport { View, Text, TouchableOpacity, useColorScheme } from 'react-native';\nimport {\n  NavigationContainer,\n  DefaultTheme,\n  DarkTheme,\n  useNavigation,\n} from '@react-navigation/native';\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\nimport { createDrawerNavigator } from '@react-navigation/drawer';\nimport { Button } from '@react-navigation/elements';\n// codeblock-focus-start\nimport { useTheme } from '@react-navigation/native';\n\n// codeblock-focus-end\nfunction SettingsScreen({ route }) {\n  const navigation = useNavigation();\n  const { user } = route.params;\n  const { colors } = useTheme();\n\n  return (\n    <View style={{ flex: 1, alignItems: 'center', justifyContent: 'center' }}>\n      <Text style={{ color: colors.text }}>Settings Screen</Text>\n      <Text style={{ color: colors.text }}>\n        userParam: {JSON.stringify(user)}\n      </Text>\n      <Button onPress={() => navigation.navigate('Profile')}>\n        Go to Profile\n      </Button>\n    </View>\n  );\n}\nfunction ProfileScreen() {\n  const { colors } = useTheme();\n\n  return (\n    <View style={{ flex: 1, alignItems: 'center', justifyContent: 'center' }}>\n      <Text style={{ color: colors.text }}>Profile Screen</Text>\n    </View>\n  );\n}\n\n// codeblock-focus-start\nfunction MyButton() {\n  // highlight-next-line\n  const { colors } = useTheme();\n\n  return (\n    <TouchableOpacity style={{ backgroundColor: colors.card }}>\n      <Text style={{ color: colors.text }}>Button!</Text>\n    </TouchableOpacity>\n  );\n}\n// codeblock-focus-end\n\nfunction HomeScreen() {\n  const navigation = useNavigation();\n  const { colors } = useTheme();\n\n  return (\n    <View style={{ flex: 1, alignItems: 'center', justifyContent: 'center' }}>\n      <Text style={{ color: colors.text }}>Home Screen</Text>\n      <MyButton />\n      <Button\n        onPress={() =>\n          navigation.navigate('Root', {\n            screen: 'Settings',\n            params: { user: 'jane' },\n          })\n        }\n      >\n        Go to Settings\n      </Button>\n    </View>\n  );\n}\n\nconst Drawer = createDrawerNavigator();\nconst Stack = createNativeStackNavigator();\n\nfunction Root() {\n  return (\n    <Stack.Navigator>\n      <Stack.Screen name=\"Profile\" component={ProfileScreen} />\n      <Stack.Screen name=\"Settings\" component={SettingsScreen} />\n    </Stack.Navigator>\n  );\n}\n\nexport default function App() {\n  const scheme = useColorScheme();\n\n  return (\n    <NavigationContainer theme={scheme === 'dark' ? DarkTheme : DefaultTheme}>\n      <Drawer.Navigator>\n        <Drawer.Screen name=\"Home\" component={HomeScreen} />\n        <Drawer.Screen\n          name=\"Root\"\n          component={Root}\n          options={{ headerShown: false }}\n        />\n      </Drawer.Navigator>\n    </NavigationContainer>\n  );\n}\n"})})})]}),"\n",(0,r.jsxs)(n.p,{children:["See ",(0,r.jsx)(n.a,{href:"/docs/themes",children:"theming guide"})," for more details and usage guide around how to configure themes."]}),"\n",(0,r.jsx)(n.h2,{id:"using-with-class-component",children:"Using with class component"}),"\n",(0,r.jsx)(n.p,{children:"You can wrap your class component in a function component to use the hook:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-js",children:"class MyButton extends React.Component {\n  render() {\n    // Get it from props\n    const { theme } = this.props;\n  }\n}\n\n// Wrap and export\nexport default function (props) {\n  const theme = useTheme();\n\n  return <MyButton {...props} theme={theme} />;\n}\n"})})]})}function d(e={}){let{wrapper:n}={...(0,a.a)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(h,{...e})}):h(e)}},5525:function(e,n,t){t.d(n,{Z:()=>i});var o=t("85893");t("67294");var r=t("67026");let a="tabItem_Ymn6";function i(e){let{children:n,hidden:t,className:i}=e;return(0,o.jsx)("div",{role:"tabpanel",className:(0,r.Z)(a,i),hidden:t,children:n})}},47902:function(e,n,t){t.d(n,{Z:()=>b});var o=t("85893"),r=t("67294"),a=t("67026"),i=t("69599"),s=t("16550"),c=t("32000"),l=t("4520"),u=t("38341"),m=t("76009");function h(e){var n,t;return null!==(t=null===(n=r.Children.toArray(e).filter(e=>"\n"!==e).map(e=>{if(!e||(0,r.isValidElement)(e)&&function(e){let{props:n}=e;return!!n&&"object"==typeof n&&"value"in n}(e))return e;throw Error("Docusaurus error: Bad <Tabs> child <".concat("string"==typeof e.type?e.type:e.type.name,'>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.'))}))||void 0===n?void 0:n.filter(Boolean))&&void 0!==t?t:[]}function d(e){let{value:n,tabValues:t}=e;return t.some(e=>e.value===n)}var f=t("7227");let p="tabList__CuJ",v="tabItem_LNqP";function g(e){let{className:n,block:t,selectedValue:r,selectValue:s,tabValues:c}=e,l=[],{blockElementScrollPositionUntilNextRender:u}=(0,i.o5)(),m=e=>{let n=e.currentTarget,t=c[l.indexOf(n)].value;t!==r&&(u(n),s(t))},h=e=>{var n,t;let o=null;switch(e.key){case"Enter":m(e);break;case"ArrowRight":{let t=l.indexOf(e.currentTarget)+1;o=null!==(n=l[t])&&void 0!==n?n:l[0];break}case"ArrowLeft":{let n=l.indexOf(e.currentTarget)-1;o=null!==(t=l[n])&&void 0!==t?t:l[l.length-1]}}null==o||o.focus()};return(0,o.jsx)("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,a.Z)("tabs",{"tabs--block":t},n),children:c.map(e=>{let{value:n,label:t,attributes:i}=e;return(0,o.jsx)("li",{role:"tab",tabIndex:r===n?0:-1,"aria-selected":r===n,ref:e=>l.push(e),onKeyDown:h,onClick:m,...i,className:(0,a.Z)("tabs__item",v,null==i?void 0:i.className,{"tabs__item--active":r===n}),children:null!=t?t:n},n)})})}function x(e){let{lazy:n,children:t,selectedValue:i}=e,s=(Array.isArray(t)?t:[t]).filter(Boolean);if(n){let e=s.find(e=>e.props.value===i);return e?(0,r.cloneElement)(e,{className:(0,a.Z)("margin-top--md",e.props.className)}):null}return(0,o.jsx)("div",{className:"margin-top--md",children:s.map((e,n)=>(0,r.cloneElement)(e,{key:n,hidden:e.props.value!==i}))})}function T(e){let n=function(e){let{defaultValue:n,queryString:t=!1,groupId:o}=e,a=function(e){let{values:n,children:t}=e;return(0,r.useMemo)(()=>{let e=null!=n?n:h(t).map(e=>{let{props:{value:n,label:t,attributes:o,default:r}}=e;return{value:n,label:t,attributes:o,default:r}});return!function(e){let n=(0,u.lx)(e,(e,n)=>e.value===n.value);if(n.length>0)throw Error('Docusaurus error: Duplicate values "'.concat(n.map(e=>e.value).join(", "),'" found in <Tabs>. Every value needs to be unique.'))}(e),e},[n,t])}(e),[i,f]=(0,r.useState)(()=>(function(e){var n;let{defaultValue:t,tabValues:o}=e;if(0===o.length)throw Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(t){if(!d({value:t,tabValues:o}))throw Error('Docusaurus error: The <Tabs> has a defaultValue "'.concat(t,'" but none of its children has the corresponding value. Available values are: ').concat(o.map(e=>e.value).join(", "),". If you intend to show no default tab, use defaultValue={null} instead."));return t}let r=null!==(n=o.find(e=>e.default))&&void 0!==n?n:o[0];if(!r)throw Error("Unexpected error: 0 tabValues");return r.value})({defaultValue:n,tabValues:a})),[p,v]=function(e){let{queryString:n=!1,groupId:t}=e,o=(0,s.k6)(),a=function(e){let{queryString:n=!1,groupId:t}=e;if("string"==typeof n)return n;if(!1===n)return null;if(!0===n&&!t)throw Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return null!=t?t:null}({queryString:n,groupId:t}),i=(0,l._X)(a);return[i,(0,r.useCallback)(e=>{if(!a)return;let n=new URLSearchParams(o.location.search);n.set(a,e),o.replace({...o.location,search:n.toString()})},[a,o])]}({queryString:t,groupId:o}),[g,x]=function(e){var n;let{groupId:t}=e;let o=(n=t)?"docusaurus.tab.".concat(n):null,[a,i]=(0,m.Nk)(o);return[a,(0,r.useCallback)(e=>{if(!!o)i.set(e)},[o,i])]}({groupId:o}),T=(()=>{let e=null!=p?p:g;return d({value:e,tabValues:a})?e:null})();return(0,c.Z)(()=>{T&&f(T)},[T]),{selectedValue:i,selectValue:(0,r.useCallback)(e=>{if(!d({value:e,tabValues:a}))throw Error("Can't select invalid tab value=".concat(e));f(e),v(e),x(e)},[v,x,a]),tabValues:a}}(e);return(0,o.jsxs)("div",{className:(0,a.Z)("tabs-container",p),children:[(0,o.jsx)(g,{...n,...e}),(0,o.jsx)(x,{...n,...e})]})}function b(e){let n=(0,f.Z)();return(0,o.jsx)(T,{...e,children:h(e.children)},String(n))}},50065:function(e,n,t){t.d(n,{Z:function(){return s},a:function(){return i}});var o=t(67294);let r={},a=o.createContext(r);function i(e){let n=o.useContext(a);return o.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function s(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:i(e.components),o.createElement(a.Provider,{value:n},e.children)}}}]);